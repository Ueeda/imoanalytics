@model ImoAnalyticsSystem.Models.Proprietario

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">Cadastrar proprietário</h3>
        </div>
        <div class="panel-body">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.NomeCompleto, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.NomeCompleto, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.Rg, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.Rg, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.ContaBancaria, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.ContaBancaria, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.Agencia, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.Agencia, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.Banco, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.Banco, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @type = "text" } })
                        <span class="highlight"></span>
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
            </div>
            <div class="row buttons-row">
                <div class="col-md-6 center">
                    <input type="submit" value="Cadastrar" class="principal-button" />
                </div>
                <div class="col-md-6 center">
                    <div class="principal-button-div">@Html.ActionLink("Limpar", "Create")</div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
