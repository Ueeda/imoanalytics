@using ImoAnalyticsSystem.ViewModels.IdentityViewModels
@model EditViewModel
@{
    ViewBag.Title = "Editar informações";
}
@using (Html.BeginForm("Edit", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">@ViewBag.Title</h3>
        </div>
        <div class="panel-body">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        <p>@Html.LabelFor(model => model.NomeCompleto)</p>
                        @Html.EditorFor(model => model.NomeCompleto, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.NomeCompleto).ToHtmlString()), @class = "effect-1" } })
                        <span class="focus-border"></span>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        <p>@Html.LabelFor(model => model.Creci)</p>
                        @Html.EditorFor(model => model.Creci, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Creci).ToHtmlString()), @class = "effect-1" } })
                        <span class="focus-border"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        <p>@Html.LabelFor(model => model.Cpf)</p>
                        @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Cpf).ToHtmlString()), @class = "effect-1 js-cpf" } })
                        <span class="focus-border"></span>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        <p>@Html.LabelFor(model => model.Rg)</p>
                        @Html.EditorFor(model => model.Rg, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Rg).ToHtmlString()), @class = "effect-1" } })
                        <span class="focus-border"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        <p>@Html.LabelFor(model => model.DataNascimento)</p>
                        @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.DataNascimento).ToHtmlString()), @class = "effect-1 js-data" } })
                        <span class="focus-border"></span>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        <p>@Html.LabelFor(model => model.PhoneNumber)</p>
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.PhoneNumber).ToHtmlString()), @class = "effect-1 js-telefone" } })
                        <span class="focus-border"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        <p>@Html.LabelFor(model => model.Cep)</p>
                        @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Cep).ToHtmlString()), @class = "effect-1 js-cep" } })
                        <span class="focus-border"></span>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        <p>@Html.LabelFor(model => model.Endereco)</p>
                        @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Endereco).ToHtmlString()), @class = "effect-1" } })
                        <span class="focus-border"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        <p>@Html.LabelFor(model => model.Numero)</p>
                        @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Numero).ToHtmlString()), @class = "effect-1" } })
                        <span class="focus-border"></span>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        <p>@Html.LabelFor(model => model.Bairro)</p>
                        @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Bairro).ToHtmlString()), @class = "effect-1" } })
                        <span class="focus-border"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        <p>@Html.LabelFor(model => model.Cidade)</p>
                        @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Cidade).ToHtmlString()), @class = "effect-1" } })
                        <span class="focus-border"></span>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="group">
                        <p>@Html.LabelFor(model => model.Estado)</p>
                        @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Estado).ToHtmlString()), @class = "effect-1" } })
                        <span class="focus-border"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="group">
                        @Html.CheckBoxFor(model => model.IsGerente)
                        @Html.LabelFor(model => model.IsGerente)
                    </div>
                </div>
            </div>
            <div class="row buttons-row">
                <div class="col-md-12 center">
                    <input type="submit" value="Salvar" class="principal-button" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
