@model ImoAnalyticsSystem.ViewModels.RelatorioViewModel
@{

  ViewBag.Title = "Relatório de estatísticas do bairro " + ViewBag.Bairro;
}

@using (Html.BeginForm())
{
    <div class="col-md-3">
        <div class="panel panel-primary filter">
            <div class="panel-heading">
                <h3 class="panel-title">Filtros</h3>
            </div>

            <div class="panel-body filter-body">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                @Html.HiddenFor(x => x.ID)
                <div class="primary-color-row row">
                    <div class="col-md-12">
                        <p>@Html.LabelFor(m => m.TituloRelatorio)</p>
                    </div>
                    <div class="col-md-12">
                        <div class="group">
                            @Html.EditorFor(model => model.TituloRelatorio, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.TituloRelatorio).ToHtmlString()), @class = "effect-1" } })
                            <span class="focus-border"></span>
                        </div>
                    </div>
                </div>
                <div class="primary-color-row row">
                    <div class="col-md-12">
                        <div class="group">
                            @Html.CheckBoxFor(model => model.Privado, new { @style = "margin-top: 20px;" })
                            @Html.LabelFor(model => model.Privado)
                        </div>
                    </div>
                </div>
                <div class="primary-color-row row">
                    <div class="col-md-12">
                        <p>Tipo de relatório</p>
                    </div>
                    <div class="col-md-12">
                        @if (Model.TipoRelatorio == TipoRelatorio.Imovel)
                        {
                            @Html.RadioButtonFor(m => m.TipoRelatorio, (int)TipoRelatorio.Imovel, new { id = TipoRelatorio.Imovel, @checked = "true" }) <label for="Imovel">Imóvel</label>
                        }
                        else
                        {
                            @Html.RadioButtonFor(m => m.TipoRelatorio, (int)TipoRelatorio.Imovel, new { id = TipoRelatorio.Imovel }) <label for="Imovel">Imóvel</label>
                        }
                    </div>
                    <div class="col-md-12">
                        @if (Model.TipoRelatorio == TipoRelatorio.Acao)
                        {
                            @Html.RadioButtonFor(m => m.TipoRelatorio, (int)TipoRelatorio.Acao, new { id = TipoRelatorio.Acao, @checked = "true" }) <label for="Acao">Locação/Venda/Visita</label>
                        }
                        else
                        {
                            @Html.RadioButtonFor(m => m.TipoRelatorio, (int)TipoRelatorio.Acao, new { id = TipoRelatorio.Acao }) <label for="Acao">Locação/Venda/Visita</label>
                        }
                    </div>
                    <div class="col-md-12">
                        @if (Model.TipoRelatorio == TipoRelatorio.Estatisticas)
                        {
                            @Html.RadioButtonFor(m => m.TipoRelatorio, (int)TipoRelatorio.Estatisticas, new { id = TipoRelatorio.Estatisticas, @checked = "true" }) <label for="Estatisticas">Estatísticas Gerais</label>
                        }
                        else
                        {
                            @Html.RadioButtonFor(m => m.TipoRelatorio, (int)TipoRelatorio.Estatisticas, new { id = TipoRelatorio.Estatisticas }) <label for="Estatisticas">Estatísticas Gerais</label>
                        }
                    </div>
                </div>
                <div class="primary-color-row row acao-filter">
                    <div class="col-md-12">
                        <p>Tipo da ação</p>
                    </div>
                    <div class="col-md-12">
                        @if (Model.TipoRelatorio == TipoRelatorio.Acao)
                        {
                            if (Model.TipoAcao == TipoAcao.Locacao)
                            {
                                @Html.RadioButtonFor(m => m.TipoAcao, (int)TipoAcao.Locacao, new { id = TipoAcao.Locacao, @checked = "true" }) <label for="Locacao">Locação</label>
                            }
                            else
                            {
                                @Html.RadioButtonFor(m => m.TipoAcao, (int)TipoAcao.Locacao, new { id = TipoAcao.Locacao }) <label for="Locacao">Locação</label>
                            }
                        }
                        else
                        {
                            @Html.RadioButtonFor(m => m.TipoAcao, (int)TipoAcao.Locacao, new { id = TipoAcao.Locacao, @disabled = "true" }) <label for="Locacao">Locação</label>
                        }
                    </div>
                    <div class="col-md-12">
                        @if (Model.TipoRelatorio == TipoRelatorio.Acao)
                        {
                            if (Model.TipoAcao == TipoAcao.Venda)
                            {
                                @Html.RadioButtonFor(m => m.TipoAcao, (int)TipoAcao.Venda, new { id = TipoAcao.Venda, @checked = "true" }) <label for="Venda">Venda</label>
                            }
                            else
                            {
                                @Html.RadioButtonFor(m => m.TipoAcao, (int)TipoAcao.Venda, new { id = TipoAcao.Venda }) <label for="Venda">Venda</label>
                            }
                        }
                        else
                        {
                            @Html.RadioButtonFor(m => m.TipoAcao, (int)TipoAcao.Venda, new { id = TipoAcao.Venda, @disabled = "true" }) <label for="Venda">Venda</label>
                        }
                    </div>
                    <div class="col-md-12">
                        @if (Model.TipoRelatorio == TipoRelatorio.Acao)
                        {
                            if (Model.TipoAcao == TipoAcao.Visita)
                            {
                                @Html.RadioButtonFor(m => m.TipoAcao, (int)TipoAcao.Visita, new { id = TipoAcao.Visita, @checked = "true" }) <label for="Visita">Visita</label>
                            }
                            else
                            {
                                @Html.RadioButtonFor(m => m.TipoAcao, (int)TipoAcao.Visita, new { id = TipoAcao.Visita }) <label for="Visita">Visita</label>
                            }
                        }
                        else
                        {
                            @Html.RadioButtonFor(m => m.TipoAcao, (int)TipoAcao.Visita, new { id = TipoAcao.Visita, @disabled = "true" }) <label for="Visita">Visita</label>
                        }

                    </div>
                </div>
                <div class="primary-color-row row valor-venda-filter">
                    <div class="col-md-12">
                        <p>@Html.LabelFor(m => m.ValorVenda)</p>
                    </div>
                    <div class="col-md-12">
                        <div class="group">
                            @if (@*Model.TipoRelatorio == TipoRelatorio.Imovel ||*@ (Model.TipoRelatorio == TipoRelatorio.Acao && Model.TipoAcao == TipoAcao.Venda))
                            {
                                @Html.EditorFor(model => model.ValorVenda, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.ValorVenda).ToHtmlString()), @class = "effect-1 js-dinheiro" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.ValorVenda, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.ValorVenda).ToHtmlString()), @class = "effect-1 js-dinheiro", @disabled = "true" } })
                            }
                            <span class="focus-border"></span>
                        </div>
                    </div>
                </div>
                <div class="primary-color-row row valor-locacao-filter">
                    <div class="col-md-12">
                        <p>@Html.LabelFor(m => m.ValorLocacao)</p>
                    </div>
                    <div class="col-md-12">
                        <div class="group">
                            @if (@*Model.TipoRelatorio == TipoRelatorio.Imovel ||*@ (Model.TipoRelatorio == TipoRelatorio.Acao && Model.TipoAcao == TipoAcao.Locacao))
                            {
                                @Html.EditorFor(model => model.ValorLocacao, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.ValorLocacao).ToHtmlString()), @class = "effect-1 js-dinheiro" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.ValorLocacao, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.ValorLocacao).ToHtmlString()), @class = "effect-1 js-dinheiro", @disabled = "true" } })
                            }
                            <span class="focus-border"></span>
                        </div>
                    </div>
                </div>
                <div class="primary-color-row row imovel-filter acao-filter">
                    <div class="col-md-12">
                        <p>@Html.LabelFor(m => m.Endereco)</p>
                    </div>
                    <div class="col-md-12">
                        <div class="group">
                            @if (Model.TipoRelatorio == TipoRelatorio.Imovel || Model.TipoRelatorio == TipoRelatorio.Acao)
                            {
                                @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Endereco).ToHtmlString()), @class = "effect-1" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Endereco).ToHtmlString()), @class = "effect-1", @disabled = "true" } })
                            }
                            <span class="focus-border"></span>
                        </div>
                    </div>
                </div>
                <div class="primary-color-row row imovel-filter estatisticas-filter acao-filter">
                    <div class="col-md-12">
                        <p>@Html.LabelFor(m => m.Bairro)</p>
                    </div>
                    <div class="col-md-12">
                        <div class="group">
                            @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Bairro).ToHtmlString()), @class = "effect-1" } })
                            <span class="focus-border"></span>
                        </div>
                    </div>
                </div>
                <div class="primary-color-row row imovel-filter estatisticas-filter acao-filter">
                    <div class="col-md-12">
                        <p>@Html.LabelFor(m => m.DataInicio)</p>
                    </div>
                    <div class="col-md-12">
                        <div class="group">
                            @Html.EditorFor(model => model.DataInicio, new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.DataInicio).ToHtmlString()), @class = "effect-1 js-data" } })
                            <span class="focus-border"></span>
                        </div>
                    </div>
                </div>
                <div class="primary-color-row row imovel-filter estatisticas-filter acao-filter">
                    <div class="col-md-12">
                        <p>@Html.LabelFor(m => m.DataFim)</p>
                    </div>
                    <div class="col-md-12">
                        <div class="group">
                            @Html.EditorFor(model => model.DataFim, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @type = "text", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.DataFim).ToHtmlString()), @class = "effect-1 js-data" } })
                            <span class="focus-border"></span>
                        </div>
                    </div>
                </div>
                <div class="primary-color-row row imovel-filter estatisticas-filter acao-filter">
                    <div class="col-md-12">
                        <p>Tipo de Imóvel</p>
                        @Html.DropDownList("tipoImovel", ViewBag.TipoImovelId as SelectList, "Selecione um tipo de imóvel", htmlAttributes: new { @class = "" })
                    </div>
                </div>
                <div class="primary-color-row row imovel-filter acao-filter">
                    <div class="col-md-12">
                        <p>@Html.LabelFor(m => m.QntdBanheiros)</p>
                    </div>
                    <div class="col-md-12">
                        <div class="group">
                            @if (Model.TipoRelatorio == TipoRelatorio.Imovel || Model.TipoRelatorio == TipoRelatorio.Acao)
                            {
                                @Html.EditorFor(model => model.QntdBanheiros, new { htmlAttributes = new { @type = "number", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.QntdBanheiros).ToHtmlString()), @class = "effect-1" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.QntdBanheiros, new { htmlAttributes = new { @type = "number", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.QntdBanheiros).ToHtmlString()), @class = "effect-1", @disabled = "true" } })
                            }
                            <span class="focus-border"></span>
                        </div>
                    </div>
                </div>
                <div class="primary-color-row row imovel-filter acao-filter">
                    <div class="col-md-12">
                        <p>@Html.LabelFor(m => m.QntdDormitorios)</p>
                    </div>
                    <div class="col-md-12">
                        <div class="group">
                            @if (Model.TipoRelatorio == TipoRelatorio.Imovel || Model.TipoRelatorio == TipoRelatorio.Acao)
                            {
                                @Html.EditorFor(model => model.QntdDormitorios, new { htmlAttributes = new { @type = "number", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.QntdDormitorios).ToHtmlString()), @class = "effect-1" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.QntdDormitorios, new { htmlAttributes = new { @type = "number", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.QntdDormitorios).ToHtmlString()), @class = "effect-1", @disabled = "true" } })
                            }
                            <span class="focus-border"></span>
                        </div>
                    </div>
                </div>
                <div class="primary-color-row row imovel-filter acao-filter">
                    <div class="col-md-12">
                        <p>@Html.LabelFor(m => m.QntdSuites)</p>
                    </div>
                    <div class="col-md-12">
                        <div class="group">
                            @if (Model.TipoRelatorio == TipoRelatorio.Imovel || Model.TipoRelatorio == TipoRelatorio.Acao)
                            {
                                @Html.EditorFor(model => model.QntdSuites, new { htmlAttributes = new { @type = "number", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.QntdSuites).ToHtmlString()), @class = "effect-1" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.QntdSuites, new { htmlAttributes = new { @type = "number", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.QntdSuites).ToHtmlString()), @class = "effect-1", @disabled = "true" } })
                            }
                            <span class="focus-border"></span>
                        </div>
                    </div>
                </div>
                <div class="primary-color-row row imovel-filter acao-filter">
                    <div class="col-md-12">
                        <p>@Html.LabelFor(m => m.QntdVagasGaragem)</p>
                    </div>
                    <div class="col-md-12">
                        <div class="group">
                            @if (Model.TipoRelatorio == TipoRelatorio.Imovel || Model.TipoRelatorio == TipoRelatorio.Acao)
                            {
                                @Html.EditorFor(model => model.QntdVagasGaragem, new { htmlAttributes = new { @type = "number", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.QntdVagasGaragem).ToHtmlString()), @class = "effect-1" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.QntdVagasGaragem, new { htmlAttributes = new { @type = "number", @placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.QntdVagasGaragem).ToHtmlString()), @class = "effect-1", @disabled = "true" } })
                            }
                            <span class="focus-border"></span>
                        </div>
                    </div>
                </div>
                <div class="row buttons-row">
                    <div class="col-md-12 center">
                        <input type="submit" value="Gerar Relatório" class="principal-button" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="col-md-9">
    <div class="panel panel-primary">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-8">
                    <h3 class="panel-title">@ViewBag.Title</h3>
                </div>
            </div>
        </div>
        <div class="panel-body">
            @(Model.Chart)
        </div>
        <div class="row">
            <div class="col-md-4">
                @using (Html.BeginForm("SalvarRelatorio", "Relatorio", FormMethod.Post))
                {
                    @Html.HiddenFor(x => x.ID)
                    @Html.HiddenFor(x => x.Bairro)
                    @Html.HiddenFor(x => x.DataFim)
                    @Html.HiddenFor(x => x.DataInicio)
                    @Html.HiddenFor(x => x.Endereco)
                    @Html.HiddenFor(x => x.Privado)
                    @Html.HiddenFor(x => x.QntdBanheiros)
                    @Html.HiddenFor(x => x.QntdDormitorios)
                    @Html.HiddenFor(x => x.QntdSuites)
                    @Html.HiddenFor(x => x.QntdVagasGaragem)
                    @Html.HiddenFor(x => x.TipoAcao)
                    @Html.HiddenFor(x => x.TipoImovelId)
                    @Html.HiddenFor(x => x.TipoRelatorio)
                    @Html.HiddenFor(x => x.TituloRelatorio)
                    @Html.HiddenFor(x => x.ValorLocacao)
                    @Html.HiddenFor(x => x.ValorVenda)

                    <input type="submit" value="Salvar" class="principal-button" style="margin: 15px" />
                }
            </div>
            @if (ViewBag.Mensagem != "")
            {
                <div class="col-md-7">
                    <p style="margin-top: 10px;">@ViewBag.Mensagem</p>
                </div>
            }
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        $("input:radio[name='TipoRelatorio']").change(function () {
            if ($("input[name='TipoRelatorio']:checked").val() == 1) {
                $(".estatisticas-filter input").val("");
                $(".estatisticas-filter input").prop("disabled", true);
                $(".acao-filter input[type='text']").val("");
                $(".acao-filter input[type='number']").val("");
                $(".acao-filter input").prop("disabled", true);
                $(".valor-locacao-filter input").val("");
                $(".valor-locacao-filter input").prop("disabled", true);
                $(".valor-venda-filter input").val("");
                $(".valor-venda-filter input").prop("disabled", true);
                $(".imovel-filter input").removeAttr("disabled");
                $("input[name='TipoAcao']").prop("checked", false);
            }
            if ($("input[name='TipoRelatorio']:checked").val() == 2) {
                $(".estatisticas-filter input").val("");
                $(".estatisticas-filter input").prop("disabled",true);
                $(".imovel-filter input").val("");
                $(".valor-locacao-filter input").val("");
                $(".valor-locacao-filter input").prop("disabled", true);
                $(".valor-venda-filter input").val("");
                $(".valor-venda-filter input").prop("disabled", true);
                $(".imovel-filter input").prop("disabled", true);
                $(".acao-filter input").removeAttr("disabled");
                $("input[name='TipoAcao']").prop("checked", false);
            }
            if ($("input[name='TipoRelatorio']:checked").val() == 3) {
                $(".estatisticas-filter input").val("");
                $(".estatisticas-filter input").prop("disable", true);
                $(".valor-locacao-filter input").val("");
                $(".valor-locacao-filter input").prop("disable", true);
                $(".valor-venda-filter input").val("");
                $(".valor-venda-filter input").prop("disabled", true);
                $(".acao-filter input[text]").val("");
                $(".acao-filter input[type='text']").val("");
                $(".acao-filter input[type='number']").val("");
                $(".acao-filter input").prop("disabled", true);
                $(".estatisticas-filter input").removeAttr("disabled");
                $("input[name='TipoAcao']").prop("checked", false);
            }
        });

        $("input:radio[name='TipoAcao']").change(function () {
            if ($("input[name='TipoAcao']:checked").val() == 2) {
                $(".valor-locacao-filter input").prop("disabled", true);
                $(".valor-locacao-filter input").val("");
                $(".valor-venda-filter input").removeAttr("disabled");
            }
            if ($("input[name='TipoAcao']:checked").val() == 1) {
                $(".valor-venda-filter input").prop("disabled", true);
                $(".valor-venda-filter input").val("");
                $(".valor-locacao-filter input").removeAttr("disabled");
            }
            if ($("input[name='TipoAcao']:checked").val() == 3) {
                $(".valor-venda-filter input").val("");
                $(".valor-venda-filter input").prop("disabled", true);
                $(".valor-locacao-filter input").val("");
                $(".valor-locacao-filter input").pop("disable", true);
            }
        });
    });
</script>